name: API CI

on:
  push:
    paths:
      - "api/**"
      - ".github/workflows/python-ci.yml"
      - "infra/compose.yaml"
      - "Makefile"
  pull_request:
    paths:
      - "api/**"
      - ".github/workflows/python-ci.yml"
      - "infra/compose.yaml"
      - "Makefile"

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.8.3"

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Ruff lint
        run: poetry run ruff check .

      - name: Run pytest
        run: poetry run pytest

  smoke:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run smoke tests
        run: bash scripts/smoke.sh

  build-image:
    runs-on: ubuntu-latest
    needs:
      - lint-and-test
      - smoke
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build API image
        run: docker build -t ai-companion-api:ci api

  deploy:
    runs-on: ubuntu-latest
    needs: build-image
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Trigger Render deploy
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          if [ -z "$RENDER_API_KEY" ] || [ -z "$RENDER_SERVICE_ID" ]; then
            echo "Render deployment skipped: missing secrets."
            exit 0
          fi
          curl -fsS -X POST \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys \
            -d '{"clearCache":false}'
