services:
  api:
    build:
      context: ..
      dockerfile: api/Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      APP_ENVIRONMENT: development
      APP_DATABASE__URL: postgresql+psycopg2://postgres:postgres@db:5432/postgres
      APP_DATABASE__ECHO: "false"
      APP_REDIS__URL: redis://redis:6379/0
      APP_REDIS__HEALTH_CHECK_INTERVAL: "30"
      RESEND_API_KEY: ${RESEND_API_KEY:-}
      RESEND_FROM_EMAIL: ${RESEND_FROM_EMAIL:-}
      EXPO_ACCESS_TOKEN: ${EXPO_ACCESS_TOKEN:-}
      EXPO_PUSH_URL: ${EXPO_PUSH_URL:-https://exp.host/--/api/v2/push/send}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI:-http://localhost:8000/oauth/google/callback}
    env_file:
      - ../.env
    volumes:
      - ../api:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  worker:
    build:
      context: ..
      dockerfile: api/Dockerfile.worker
    command: poetry run celery -A app.celery_app worker --loglevel=info --beat
    environment:
      APP_ENVIRONMENT: development
      APP_DATABASE__URL: postgresql+psycopg2://postgres:postgres@db:5432/postgres
      APP_DATABASE__ECHO: "false"
      APP_REDIS__URL: redis://redis:6379/0
      APP_REDIS__HEALTH_CHECK_INTERVAL: "30"
      RESEND_API_KEY: ${RESEND_API_KEY:-}
      RESEND_FROM_EMAIL: ${RESEND_FROM_EMAIL:-}
      EXPO_ACCESS_TOKEN: ${EXPO_ACCESS_TOKEN:-}
      EXPO_PUSH_URL: ${EXPO_PUSH_URL:-https://exp.host/--/api/v2/push/send}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI:-http://localhost:8000/oauth/google/callback}

    volumes:
      - ../api:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  migrate:
    build:
      context: ..
      dockerfile: api/Dockerfile
    command: poetry run alembic upgrade head
    environment:
      APP_ENVIRONMENT: development
      APP_DATABASE__URL: postgresql+psycopg2://postgres:postgres@db:5432/postgres
      APP_DATABASE__ECHO: "false"
      APP_REDIS__URL: redis://redis:6379/0
      APP_REDIS__HEALTH_CHECK_INTERVAL: "30"
    depends_on:
      db:
        condition: service_healthy
    restart: "no"

  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  db_data:
