services:
  - type: web
    name: ai-companion-api
    env: docker
    plan: starter
    region: oregon            # or frankfurt/singapore etc.
    autoDeploy: true
    healthCheckPath: /health
    buildCommand: docker build -t ai-companion-api -f infra/Dockerfile.api .
    startCommand: uvicorn app.main:app --host 0.0.0.0 --port $PORT
    envVars:
      - key: APP_ENV
        value: production
      - key: OPENAI_API_KEY
        sync: false           # set in Render dashboard
      - key: POSTGRES_HOST
        fromService:
          type: pserv
          name: ai-companion-db
          property: host
      - key: POSTGRES_PORT
        value: 5432
      - key: POSTGRES_DB
        value: ai_companion
      - key: POSTGRES_USER
        value: postgres
      - key: POSTGRES_PASSWORD
        sync: false           # set in Render dashboard
      - key: REDIS_URL
        fromService:
          type: redis
          name: ai-companion-redis
          property: connectionString

  - type: worker
    name: ai-companion-worker
    env: docker
    plan: starter
    region: oregon
    autoDeploy: true
    buildCommand: docker build -t ai-companion-worker -f infra/Dockerfile.worker .
    startCommand: poetry run celery -A app.celery_app worker --loglevel=info
    envVars:
      - key: APP_ENV
        value: production
      - key: OPENAI_API_KEY
        sync: false
      - key: POSTGRES_HOST
        fromService:
          type: pserv
          name: ai-companion-db
          property: host
      - key: POSTGRES_PORT
        value: 5432
      - key: POSTGRES_DB
        value: ai_companion
      - key: POSTGRES_USER
        value: postgres
      - key: POSTGRES_PASSWORD
        sync: false
      - key: REDIS_URL
        fromService:
          type: redis
          name: ai-companion-redis
          property: connectionString

  - type: redis
    name: ai-companion-redis
    plan: starter

databases:
  - name: ai-companion-db
    plan: starter             # pick plan in the UI if your account differs
    databaseName: ai_companion
    user: postgres
    ipAllowList: []           # private by default
